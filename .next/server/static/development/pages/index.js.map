{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./actions/index.js","webpack:///./actions/message.js","webpack:///./components/Message.js","webpack:///./components/Messenger.js","webpack:///./components/NavBar.js","webpack:///./pages/index.js","webpack:///external \"dayjs\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"lodash.throttle\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"socket.io-client\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const ADD_HOUSE = 'ADD_HOUSE';\n","import { ADD_MESSAGE } from '.';\nimport { ADD_HOUSE } from '.';\n\nexport function addMessage(text, username, created_at) {\n  return {\n    type: ADD_MESSAGE,\n    text,\n    username,\n    created_at,\n  };\n}\n\nexport function addHouse(house_id, username, created_at) {\n  return {\n    type: ADD_HOUSE,\n    house_id,\n    username,\n    created_at,\n  };\n}\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\n\nexport default ({ message, username, firstMessage }) => {\n  const ownMessage = username === message.username;\n  return (\n    <li style={{ listStyle: 'none' }}>\n      <div className=\"message-container\">\n        <div className={ownMessage ? 'my-subcontainer' : 'your-subcontainer'}>\n          {ownMessage && (\n            <span className=\"timestamp\">\n              {dayjs(message.created_at).format('h:mma')}{'  '}\n            </span>\n          )}\n          {!firstMessage &&\n            !ownMessage && (\n              <span className=\"message-username\">{message.username}</span>\n            )}\n          <div className={ownMessage ? 'my-message' : 'your-message'}>\n            {message.text}\n          </div>\n          {!ownMessage && (\n            <span className=\"timestamp\">\n              {'  '}\n              {dayjs(message.created_at).format('h:mma')}\n            </span>\n          )}\n        </div>\n      </div>\n\n      <style>\n        {`\n          .my-subcontainer {\n            text-align: right;\n          }\n        `}\n      </style>\n    </li>\n  );\n};\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport io from 'socket.io-client';\nimport { addMessage } from '../actions/message';\nimport { addHouse } from '../actions/message';\nimport Message from './Message';\nimport NavBar from './NavBar';\nimport throttle from 'lodash.throttle';\nimport isomorphicFetch from 'isomorphic-fetch';\n\nconst generateName = () => {\n  const getRandomInt = (min, max) =>\n    Math.floor(Math.random() * (max - min)) + min;\n  const firstName = [\n    'Jack',\n    'Steven',\n    'Brian',\n    'Marc',\n    'Drew',\n    'Stephanie',\n    'Daniel',\n    'James',\n    'Spencer',\n    'Caitlin',\n    'Jackie',\n    'Julius',\n    'Patrick',\n  ];\n  const lastName = [\n    'Li',\n    'Chung',\n    'Tiosejo',\n    'Louie',\n    'Curtis',\n    'Sockwell',\n    'Jiang',\n    'Bykowsky',\n    'Detro',\n    'Chen',\n    'Sea',\n    'Doyle',\n  ];\n  const name =\n    firstName[getRandomInt(0, firstName.length)] +\n    ' ' +\n    lastName[getRandomInt(0, lastName.length)];\n  return name\n};\n\nclass Messenger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      messages: [],\n      username: generateName(),\n      password: '',\n      updated: false,\n      currentConvo: '',\n      friends: new Set(),\n      currentView: 'messenger',\n      typing: [],\n    };\n  }\n\n  componentDidUpdate() {\n    this.scrollToBottom();\n    if (!this.state.messages.length && !this.state.updated) {\n      this.setState(state => {\n        this.props.messages.forEach(msg => {\n          state.friends.add(msg.username);\n        });\n        return state;\n      });\n      const filtered = this.state.currentConvo !== '' ? this.props.messages.filter(message => (message.username === this.state.currentConvo)) : this.props.messages;\n      this.setState({ messages: filtered, updated: true })\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(this.scrollToBottom, 100);\n  }\n\n  componentWillUnmount() {\n    this.socket.off('message', this.handleMessage);\n    this.socket.close();\n  }\n\n  connectAuthedUser = (username, password) => {\n    this.socket = io('http://localhost:3000');\n    this.socket.on('connect', () => {\n      this.socket.emit('authentication', {username, password});\n      this.socket.on('message', this.handleMessage);\n      this.socket.on('typing', this.typingStatus);\n    });\n  };\n\n  handleMessage = message => {\n    this.setState(state => ({\n      typing: state.typing.filter(({username}) => username !== message.username),\n    }));\n    this.setState(state => state.friends.add(message.username));\n    this.setState(state => ({ messages: state.messages.concat(message) }));\n    this.props.addMessage(message.text, message.username, message.created_at);\n  };\n\n  typingStatus = data => {\n    const notIncluded = this.state.typing.filter(el => el.username !== data);\n    for (let i = 0, len = this.state.typing.length; i < len; ++i) {\n      if (this.state.typing[i].username === data) {\n        clearTimeout(this.state.typing[i].timeoutId);\n      }\n    }\n    const timeoutId = setTimeout(() => {\n      this.setState(state => ({\n        typing: state.typing.filter(el => el.username !== data),\n      }))\n    }, 3000);\n    const status = {username: data, timeoutId: timeoutId};\n    this.setState(state => ({typing: [...notIncluded, status]}));\n\n  };\n\n  getCurrentConvo = otherUser => {\n    this.setState(() => {\n      const filtered = this.props.messages.filter(message => (message.username === otherUser));\n      return {\n        currentConvo: otherUser,\n        messages: filtered,\n      }\n    });\n  };\n\n  handleTypingStatus = () => {\n    throttle(this.socket.emit('typing', this.state.username), 2500);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.text !== '') {\n      const message = {\n        created_at: new Date().getTime(),\n        username: this.state.username,\n        text: this.state.text,\n      };\n\n      this.socket.emit('message', message);\n\n      this.props.addMessage(\n        this.state.text,\n        this.state.username,\n        message.created_at,\n      );\n      this.setState(state => ({\n        text: '',\n        messages: this.state.messages.concat(message),\n      }))\n    }\n  };\n\n  changeToHomeView = () => {\n    //TODO change this to routing? if so remove currentView from state\n    this.setState({currentView: 'browse'})\n  };\n\n  changeToMessageView = () => {\n    //TODO remove this with above function\n    this.setState({currentView: 'messenger'})\n  };\n\n  scrollToBottom = () => {\n    if (this.el) {\n      this.el.scrollIntoView({ behavior: 'instant' })\n    }\n  };\n\n  loginUser = (e) => {\n    e.preventDefault();\n    const userInfo = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    //TODO make it so username in state can't change?\n    isomorphicFetch('/signup', {\n      method: \"POST\",\n      body: JSON.stringify(userInfo),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\",\n    }).then(() => {\n      this.connectAuthedUser(userInfo.username, userInfo.password);\n    })\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  };\n\n  render() {\n    const sameUser = (msg, i, arr) => {\n      return i > 0 && msg.username === arr[i - 1].username\n    };\n    const typingStatusMessage = !this.state.typing.length ? ''\n        : this.state.typing.length === 1 ? `${this.state.typing[0].username} is typing...`\n        : this.state.typing.length === 2 ? `${this.state.typing[0].username} and ${this.state.typing[1].username} are typing...` : `multiple people are typing`;\n    return (\n      <React.Fragment>\n        <form onSubmit={this.loginUser} onChange={this.handleChange}>\n        <input\n          type=\"text\"\n          placeholder={'enter username'}\n          name='username'\n        />\n          <input\n            type=\"password\"\n            placeholder={'enter password'}\n            name='password'\n          />\n          <input\n            type='submit'\n            />\n        </form>\n        <div className=\"mdl-card mdl-shadow--2dp\" id=\"chatview\">\n          <NavBar\n            getConvo={this.getCurrentConvo}\n            friends={[...this.state.friends]}\n            changeHome={this.changeToHomeView}\n            changeMessage={this.changeToMessageView}\n            currentView={this.state.currentView}\n          />\n          {this.state.currentView === 'browser' && <ul>Browse Homes</ul>}\n          {this.state.currentView === 'messenger' && <ul>\n            {this.state.messages.map((message, i, array) => (\n              <Message\n                key={i}\n                message={message}\n                username={this.state.username}\n                firstMessage={sameUser(message, i, array)}\n              />\n            ))}\n            <div\n              ref={el => {\n                this.el = el;\n              }}\n            />\n          </ul>}\n          <div id='typing-status'><i>{typingStatusMessage}</i></div>\n          <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n            <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n              <input\n                type=\"text\"\n                value={this.state.text}\n                onChange={e => {\n                  this.socket.emit('typing', this.state.username);\n                  this.setState({ text: e.target.value })\n                }}\n                className=\"mdl-textfield__input\"\n                id=\"message-input\"\n                placeholder={'Send a message'}\n              />\n\n              <span onClick={this.handleSubmit}><i className=\"far fa-comment\"></i></span>\n              <label className=\"mdl-textfield__label\" htmlFor=\"message-input\" />\n            </div>\n          </form>\n          <style>{`\n            #typing-status {\n            height: 2.4em;\n            font-size: .7em;\n            }\n\t\t\t\t\t\t#message-input {\n\t\t\t\t\t\tborder-bottom: lightgray solid 1px;\n\t\t\t\t\t\tborder-top: lightgray solid 1px;\n\t\t\t\t\t\theight: 20px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tform {\n\t\t\t\t\t\t\tbackground: #fff;\n\t\t\t\t\t\t\tpadding: 0px 10px 0px 10px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tul {\n\t\t\t\t\t\t\theight: 480px;\n\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t\tpadding: 0;\n\t\t\t\t\t\t\ttext-align: left;\n\t\t\t\t\t\t\tlist-style: none;\n\t\t\t\t\t\t\toverflow-y: scroll;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tul li {\n\t\t\t\t\t\t\tpadding: 1px;\n\t\t\t\t\t\t\tbackground: #FFF;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.mdl-card {\n\t\t\t\t\t\t\tmargin: auto;\n\t\t\t\t\t\t\ttransition: all .3s;\n\t\t\t\t\t\t\ttransform: translateY(100px);\n              height: 500px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.mdl-textfield__input {\n              display:inline-block;\n              width: 90%;\n              padding-top: .5em;\n            }\n\t\t\t\t\t\t.timestamp{\n\t\t          font-size:10px;\n\t\t          font-weight: 300;\n\t\t          color: transparent;\n\t\t          margin: 3px;\n\t          }\n\t          li:hover .my-timestamp {\n\t\t          color: black;\n\t\t          transition: color .8s;\n\t          }\n\t          li:hover .timestamp {\n\t\t          color: black;\n\t\t          transition: color .8s;\n\t          }\n\t        .my-message {\n\t\t        display: inline-block;\n\t\t        background: #00e34d;\n\t\t        color: white;\n\t\t        border-radius: 10px;\n\t\t        padding: 7px;\n\t\t        max-width: 50%;\n\t\t        word-wrap: break-word;\n\t\t        clear: right;\n\t\t        line-height: 1.25;\n\t        }\n\t        .your-message {\n\t\t        display: inline-block;\n\t\t        background: #E5E5EA;\n\t\t        border-radius: 10px;\n\t\t        padding: 7px;\n\t\t        word-wrap: break-word;\n\t\t        max-width:70%;\n\t\t        line-height: 1.25;\n\t        }\n          .message-username {\n\t          display: block;\n\t          font-size: 0.8em;\n\t          font-weight: bold;\n\t          line-height: 1.5;\n\t          margin-left: 0.6em;\n          }\n          .send-msg-btn {\n            cursor:pointer;\n          }\n   \t\t\t\t.mdl-textfield__label:after{\n            background-color: #0069E0;\n          }\n\t\t\t\t\t`}</style>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(\n  ({ messages, houses }) => ({ messages, houses }),\n  { addMessage , addHouse},\n)(Messenger)\n","import React from 'react';\nconst NavBar = ({getConvo, friends, changeHome, changeMessage, currentView}) => {\n  return (\n    <div id='navbar-container'>\n      {currentView === 'messenger' && <a href='/browse' ><img src={'../static/house.png'} id='house-button'/></a>}\n      <div className=\"dropdown\">\n        <button className=\"dropbtn\">Menu</button>\n        <div className=\"dropdown-content\">\n\n          {currentView === 'browse' && <a onClick={changeMessage}>Messenger</a>}\n          {friends.slice(-5).map((friend, i) => (\n            <a key={i} onClick={() => getConvo(`${friend}`)}>{friend}</a>\n          ))}\n\n        </div>\n      </div>\n      <style>{`\n        a {\n        font-size: 12px;\n        }\n        #navbar-container {\n        display: flex;\n        justify-content: flex-end;\n        }\n        #house-button {\n        margin-right: 12px;\n        height: 50px;\n        width: auto;\n        }\n        .dropbtn {\n            background-color: #0069E0;\n            color: white;\n            padding: 10px;\n            font-size: 16px;\n            border: none;\n            cursor: pointer;\n            width: 120px;\n        }\n        .dropdown {\n            position: relative;\n            display: inline-block;\n            float: right;\n        }\n        .dropdown-content {\n            display: none;\n            position: absolute;\n            background-color: #f9f9f9;\n            min-width: 160px;\n            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n            z-index: 1;\n        }\n        .dropdown-content a {\n            color: black;\n            // padding: 12px 16px;\n            text-decoration: none;\n            display: block;\n        }\n        .dropdown-content a:hover {background-color: #f1f1f1}\n        .dropdown:hover .dropdown-content {\n            display: block;\n        }\n        .dropdown:hover .dropbtn {\n            background-color: #0069E0;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import 'isomorphic-fetch'\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport Messenger from '../components/Messenger'\n\nclass Index extends React.Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <Messenger />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect()(Index)\n","module.exports = require(\"dayjs\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"lodash.throttle\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"socket.io-client\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAMA;AAAA;AAEA;AAAA;AAIA;AAAA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAeA;AAcA;AAIA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuCA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AA9CA;AAgDA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAvDA;AAyDA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAxEA;AA0EA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAlFA;AAoFA;AACA;AACA;AAtFA;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AACA;AA9GA;AAgHA;AACA;AAAA;AAAA;AACA;AACA;AAnHA;AAqHA;AACA;AAAA;AAAA;AACA;AACA;AAxHA;AA0HA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA9HA;AAgIA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AADA;AAGA;AANA;AAQA;AACA;AACA;AACA;AAjJA;AAmJA;AACA;AACA;AAnJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAaA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAkHA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AADA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAEA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AA2FA;;;;AAlTA;AACA;AAoTA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;ACxWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAOA;;;;AATA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;;;;AClBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}