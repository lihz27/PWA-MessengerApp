{"version":3,"file":"static/development/pages/messenger.js","sources":["webpack:///webpack/bootstrap","webpack:///./actions/index.js","webpack:///./actions/message.js","webpack:///./components/Favorites.js","webpack:///./components/Message.js","webpack:///./components/Messenger.js","webpack:///./components/NavBar.js","webpack:///./pages/messenger.js","webpack:///./utils/notification.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"dayjs\"","webpack:///external \"next/link\"","webpack:///external \"react\"","webpack:///external \"react-drag-drop-container\"","webpack:///external \"react-redux\"","webpack:///external \"socket.io-client\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export const ADD_MESSAGE = 'ADD_MESSAGE';\nexport const ADD_HOUSE = 'ADD_HOUSE';\nexport const ADD_USER = 'ADD_USER';\n","import { ADD_MESSAGE, ADD_HOUSE, ADD_USER } from '.';\n\nexport function addMessage(text, messageType, username, created_at, recipients) {\n  return {\n    type: ADD_MESSAGE,\n    text,\n    messageType,\n    username,\n    created_at,\n    recipients,\n  };\n}\n\nexport function addHouse(house_id, username, imgUrl) {\n  return {\n    type: ADD_HOUSE,\n    house_id,\n    username,\n    imgUrl,\n  };\n}\n\nexport function addUser(username, password) {\n  return {\n    type: ADD_USER,\n    username,\n    password,\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Link from 'next/link'\nimport { DragDropContainer } from 'react-drag-drop-container'\n\nconst Favorites = props => (\n  <div id=\"favorites-container\">\n    {props.houses.map((obj, i) => (\n      <DragDropContainer\n        onDrop={() => props.shareFavorite(i)}\n        targetKey=\"fav\"\n        dragClone\n        render={() => (\n          <Link href={`/browser/${obj.house_id}`} prefetch>\n            <img\n              className=\"fav-image-prev\"\n              key={i}\n              src={obj.imgUrl}\n              alt=\"house-image\"\n            />\n          </Link>\n          )}\n      />\n      ))}\n\n    <style>\n      {`\n      img {\n        cursor: pointer;\n      }\n      #favorites-container {\n        margin: 0 .3em 0 .3em;\n        background-color: white;\n        height: 6em;\n        justify-content: space-around;\n      }\n      .fav-image-prev {\n        display: inline-block;\n        width: 5em;\n        height: auto;\n        margin: .5em 1em;\n        border: 3px solid black;\n      }\n      `}\n    </style>\n  </div>\n  );\n\nexport default connect(({ houses }) => ({ houses }))(Favorites)\n","import React from 'react'\nimport dayjs from 'dayjs'\nimport Link from 'next/link'\n\nexport default ({ message, username, firstMessage }) => {\n  const ownMessage = username === message.username;\n  return (\n    <li style={{ listStyle: 'none' }}>\n      <div className=\"message-container\">\n        <div className={ownMessage ? 'my-subcontainer' : 'your-subcontainer'}>\n          {ownMessage && (\n            <span className=\"timestamp\">\n              {dayjs(message.created_at).format('h:mma')}\n              {'  '}\n            </span>\n          )}\n          {!firstMessage &&\n            !ownMessage && (\n              <span className=\"message-username\">{message.username}</span>\n            )}\n          <div className={ownMessage ? 'my-message' : 'your-message'}>\n            {message.messageType === 'text' ? (\n              message.text\n            ) : (\n              <Link href={`/browser/${message.text[0]}`}>\n                <img\n                  className=\"shared-fav\"\n                  src={message.text[1]}\n                  alt=\"house-preview\"\n                />\n              </Link>\n            )}\n            <br />\n            {message.messageType === 'text' ? '' : 'Check out this house!'}\n          </div>\n          {!ownMessage && (\n            <span className=\"timestamp\">\n              {'  '}\n              {dayjs(message.created_at).format('h:mma')}\n            </span>\n          )}\n        </div>\n      </div>\n\n      <style>\n        {`\n          .shared-fav {\n          width: 6em;\n          display: block;\n          height: auto;\n          margin: .2em auto -.8em auto;\n          }\n          .my-subcontainer {\n            text-align: right;\n          }\n        `}\n      </style>\n    </li>\n  )\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport io from 'socket.io-client'\nimport { DropTarget } from 'react-drag-drop-container'\nimport { addMessage } from '../actions/message'\nimport Message from './Message'\nimport NavBar from './NavBar'\nimport Favorites from './Favorites'\nimport { messageAlert } from '../utils/notification'\n\nclass Messenger extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      messages: [],\n      updated: false,\n      currentConvo: this.props.sender || '',\n      friends: new Set(),\n      typing: [],\n      otherNewMessage: false,\n    }\n  }\n\n  componentDidUpdate() {\n    this.username = this.props.user.username;\n    this.scrollToBottom();\n    if (!this.state.messages.length && !this.state.updated) {\n      this.setState(state => {\n        const setCopy = new Set(state.friends);\n        this.props.messages.forEach(msg => {\n          setCopy.add(msg.username)\n        });\n        return {friends: setCopy};\n      });\n      const filtered =\n        this.state.currentConvo !== ''\n          ? this.props.messages.filter(\n              message => message.username === this.state.currentConvo,\n            )\n          : this.props.messages.filter(\n              message => message.username === this.props.messages.slice(-1)[0],\n            );\n      this.setState({\n        messages: filtered,\n        updated: true,\n      })\n    }\n  }\n\n  componentDidMount() {\n    const connectSocket = () => {\n      const { username, password } = this.props.user;\n      this.socket = io('https://www.brian-louie.online');\n      this.socket.on('connect', () => {\n        this.socket.emit('authentication', { username, password })\n      });\n      this.socket.on('message', this.handleMessage);\n      this.socket.on('typing', this.typingStatus);\n      this.socket.on('noexist', this.noUserExists);\n      this.socket.emit('login', username);\n      this.socket.emit('unread', username);\n    };\n\n    setTimeout(connectSocket, 100);\n    setTimeout(this.scrollToBottom, 100);\n  }\n\n  componentWillUnmount() {\n    // TODO do I want this to shut off when you navigate away from messenger?\n    // this works current if user goes back to browser\n    // TODO seems like I want to receive messages still\n    // this.socket.off('message', this.handleMessage);\n    // this.socket.close();\n  }\n\n  handleMessage = message => {\n    messageAlert(message.text, message.username);\n    this.setState(state => ({\n      typing: state.typing.filter(\n        ({ username }) => username !== message.username,\n      ),\n    }));\n    this.setState(state => {\n      const setCopy = new Set(state.friends);\n      setCopy.add(message.username);\n      return {friends: setCopy};\n    });\n    if (message.username === this.state.currentConvo) {\n      this.setState(state => ({ messages: state.messages.concat(message) }))\n    } else {\n      this.setState({ otherNewMessage: true })\n    }\n    this.props.addMessage(\n      message.text,\n      message.messageType,\n      message.username,\n      message.created_at,\n      message.recipients,\n    );\n    this.scrollToBottom();\n  };\n\n  noUserExists = () => {\n    // TODO placeholder, not for actual use\n    alert('User by that name does not exist')\n  };\n\n  typingStatus = data => {\n    if (data === this.state.currentConvo) {\n      const notIncluded = this.state.typing.filter(el => el.username !== data);\n      for (let i = 0, len = this.state.typing.length; i < len; ++i) {\n        if (this.state.typing[i].username === data) {\n          clearTimeout(this.state.typing[i].timeoutId)\n        }\n      }\n      const timeoutId = setTimeout(() => {\n        this.setState(state => ({\n          typing: state.typing.filter(el => el.username !== data),\n        }))\n      }, 3000);\n      const status = { username: data, timeoutId };\n      this.setState(state => ({ typing: [...notIncluded, status] }))\n    }\n  };\n\n  getCurrentConvo = otherUser => {\n    this.setState(() => {\n      const filtered = this.props.messages.filter(\n        message =>\n          message.username === otherUser ||\n          (message.username === this.username &&\n            message.recipients.includes(otherUser))\n      );\n      return {\n        currentConvo: otherUser,\n        messages: filtered,\n        otherNewMessage: false,\n      }\n    })\n  };\n\n  addConversation = async () => {\n    //TODO placeholder prompt\n    const username = await prompt('enter a username');\n    this.setState(\n      state => {\n        // TODO currently no confirmation for friends\n        const setCopy = new Set(state.friends);\n        setCopy.add(username);\n        return {\n          currentConvo: username,\n          friends: setCopy,\n        }\n      },\n      () => {\n        this.getCurrentConvo(username)\n      },\n    )\n  };\n\n  showTypingStatus = e => {\n    const typingStatus = {\n      username: this.username,\n      recipients: [this.state.currentConvo],\n    };\n    this.socket.emit('typing', typingStatus);\n    this.setState({ text: e.target.value })\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.text !== '' && this.state.currentConvo !== '') {\n      const message = {\n        created_at: new Date().getTime(),\n        username: this.username,\n        text: this.state.text,\n        messageType: 'text',\n        recipients: [this.state.currentConvo],\n      };\n\n      this.socket.emit('message', message);\n\n      this.props.addMessage(\n        this.state.text,\n        'text',\n        this.username,\n        message.created_at,\n        [this.state.currentConvo],\n      );\n      this.setState(state => ({\n        text: '',\n        messages: this.state.messages.concat(message),\n      }))\n    }\n  };\n\n  scrollToBottom = () => {\n    if (this.el) {\n      this.el.scrollIntoView({ behavior: 'instant' })\n    }\n  };\n\n  shareFavorite = arrayIdx => {\n    const message = {\n      created_at: new Date().getTime(),\n      username: this.username,\n      text: [\n        this.props.houses[arrayIdx].house_id,\n        this.props.houses[arrayIdx].imgUrl,\n      ],\n      messageType: 'link',\n      recipients: [this.state.currentConvo],\n    };\n    this.socket.emit('message', message);\n    this.props.addMessage(\n      message.text,\n      message.messageType,\n      message.username,\n      message.created_at,\n      message.recipients,\n    );\n    this.setState(\n      state => ({messages: [...this.state.messages, message]}),\n      () => this.scrollToBottom(),\n    )\n  };\n\n\n  render() {\n    const sameUser = (msg, i, arr) =>\n      i > 0 && msg.username === arr[i - 1].username;\n    const typingStatusMessage = !this.state.typing.length\n      ? ''\n      : this.state.typing.length === 1\n        ? `${this.state.typing[0].username} is typing...`\n        : this.state.typing.length === 2\n          ? `${this.state.typing[0].username} and ${\n              this.state.typing[1].username\n            } are typing...`\n          : 'several people are typing';\n    return (\n      <div className=\"mdl-card mdl-shadow--2dp\" id=\"chatview\">\n        <Favorites shareFavorite={this.shareFavorite} />\n        <NavBar\n          newMessage={this.state.otherNewMessage}\n          currentChat={this.state.currentConvo}\n          addConvo={this.addConversation}\n          getConvo={this.getCurrentConvo}\n          friends={[...this.state.friends].filter(\n            notUser =>\n              notUser !== this.username && notUser !== this.state.currentConvo,\n          )}\n        />\n        <DropTarget targetKey=\"fav\">\n          <ul>\n            {this.state.messages.map((message, i, array) => (\n              <Message\n                key={i}\n                message={message}\n                username={this.username}\n                firstMessage={sameUser(message, i, array)}\n              />\n            ))}\n            <div\n              ref={el => {\n                this.el = el;\n              }}\n            />\n          </ul>\n        </DropTarget>\n        <div id=\"typing-status\">\n          <i>{typingStatusMessage}</i>\n        </div>\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n          <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n            <input\n              type=\"text\"\n              value={this.state.text}\n              onChange={this.showTypingStatus}\n              className=\"mdl-textfield__input\"\n              id=\"message-input\"\n              placeholder=\"Send a message\"\n            />\n\n            <span onClick={this.handleSubmit}>\n              <i className=\"far fa-comment\" />\n            </span>\n\n            <label className=\"mdl-textfield__label\" htmlFor=\"message-input\" />\n          </div>\n        </form>\n        <style>\n          {`\n            .droptarget {\n              height: 440px;\n            }\n            #chatview {\n              width: 320px;\n              height: 568px;\n            }\n            #typing-status {\n              margin-top: .5em;\n              height: 2.4em;\n              font-size: .7em;\n            }\n            #message-input {\n              border-bottom: lightgray solid 1px;\n              border-top: lightgray solid 1px;\n              height: 3em;\n            }\n            form {\n              background: #fff;\n              padding: 0px 10px 0px 10px;\n            }\n            ul {\n              position: relative;\n              top:0.5em;\n              height: 350px;\n              margin: 0;\n              padding: 0;\n              text-align: left;\n              list-style: none;\n              overflow-y: scroll;\n            }\n            ul li {\n              padding: 1px;\n              background: #FFF;\n            }\n            .mdl-card {\n              margin: auto;\n              transition: all .3s;\n            }\n            .mdl-textfield__input {\n              display:inline-block;\n              width: 90%;\n              padding-top: .5em;\n            }\n            .timestamp{\n              font-size:10px;\n              font-weight: 300;\n              color: transparent;\n              margin: 3px;\n            }\n            li:hover .my-timestamp {\n              color: black;\n              transition: color .8s;\n            }\n            li:hover .timestamp {\n              color: black;\n              transition: color .8s;\n            }\n            .my-message {\n              display: inline-block;\n              font-weight: 400;\n              background: #00e34d;\n              color: white;\n              border-radius: 10px;\n              padding: 7px;\n              max-width: 50%;\n              word-wrap: break-word;\n              clear: right;\n              line-height: 1.25;\n              text-align: left; /*  */\n            }\n            .your-message {\n              display: inline-block;\n              background: #E5E5EA;\n              border-radius: 10px;\n              padding: 7px;\n              word-wrap: break-word;\n              max-width:70%;\n              line-height: 1.25;\n            }\n            .message-username {\n              display: block;\n              font-size: 0.8em;\n              font-weight: bold;\n              line-height: 1.5;\n              margin-left: 0.6em;\n            }\n            .send-msg-btn {\n              cursor:pointer;\n            }\n            .mdl-textfield__label:after{\n              background-color: #0069E0;\n            }\n          `}\n        </style>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  ({ messages, houses, user }) => ({ messages, houses, user }),\n  { addMessage },\n)(Messenger)\n","import React from 'react';\nimport Link from 'next/link'\n\nconst NavBar = ({\n  getConvo,\n  friends,\n  newMessage,\n  changeHome,\n  changeMessage,\n  addConvo,\n  currentChat\n}) => {\n  return (\n    <div id=\"navbar-container\">\n      <div id='convo-status'>\n        Chatting with <br/>\n        {currentChat}\n      </div>\n      <Link href='/browser' prefetch>\n        <a id=\"house-button2\"><i className=\"fa fa-home\"> Home</i></a>\n\n      </Link>\n      <span>\n        <div id='new-message-badge'>{newMessage ? 'New message' : ''}</div>\n    </span>\n      <div className=\"dropdown\">\n        <button className=\"dropbtn\"\n        ><i className=\"fas fa-bars\"> Menu</i></button>\n        <div className=\"dropdown-content\">\n          <a onClick={addConvo}>Start a new convo</a>\n          {friends.slice(-5).map((friend, i) => (\n            <a key={i} onClick={() => getConvo(`${friend}`)}>\n              {friend}\n            </a>\n          ))}\n        </div>\n      </div>\n      <style>\n        {`\n        #new-message-badge {\n          background: red;\n          color: white;\n          position: absolute;\n          font-size: .75em;\n          z-index: 1;\n          left: 18em;\n        }\n        #convo-status {\n          color: white;\n          font-size: .8em;\n          position: relative; /*  */\n        }\n        a {\n          font-size: 12px;\n        }\n        #navbar-container {\n          display: flex;\n          justify-content: space-around; /* changed to space-around from flex-end */\n          background-color: #0069E0;\n          height: 3em; /*  */\n        }\n        #house-button {\n          margin-right: 12px;\n          width: auto; /* deleted height */\n        }\n        #house-button:hover {\n          transform: scale(1.2); /* added zoom */\n        }\n        #house-button2 {\n          color: white;\n          position: relative;\n          left: 1.5em;\n          top: 20%;\n          font-size:1em;\n        }\n        .dropbtn {\n            background-color: #0069E0;\n            color: white;\n            font-size: 1em; /* changed to 1em from 16px */\n            border: none;\n            cursor: pointer;\n            width: 120px;\n            margin: .5em .2em;\n            text-align: end;\n        }\n        .dropdown {\n            position: relative;\n            display: inline-block;\n            float: right;\n        }\n        .dropdown-content {\n            margin-top: -.15em;\n            display: none;\n            position: absolute;\n            background-color: #f9f9f9;\n            min-width: 160px;\n            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n            z-index: 1;\n        }\n        .dropdown-content a {\n            color: black;\n             padding: 12px 16px;\n            text-decoration: none;\n            display: block;\n        }\n        .dropdown-content a:hover {background-color: #f1f1f1}\n        .dropdown:hover .dropdown-content {\n            display: block;\n        }\n        .dropdown:hover .dropbtn {\n            background-color: #0069E0;\n        }\n      `}\n      </style>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport Messenger from '../components/Messenger'\n\nconst MessengerView = () => {\n  let endpoint;\n  if (typeof window !== 'undefined') {\n    endpoint = window.location.pathname.replace(/\\/messenger\\//, '');\n  }\n  if (endpoint !== '/messenger') {\n    return <Messenger sender={endpoint} />;\n  } else {\n    return (<Messenger />);\n  }\n};\n\nexport default MessengerView;\n","export default function () {\n  if (!('Notification' in window)) {\n    console.log('Notifications not supported in this browser');\n  } else {\n    Notification.requestPermission(status => {\n      console.log('Notification permission status:', status);\n    })\n\n  }\n}\n\nexport const messageAlert = (msgBody, sender = 'MessengerHouse App') => {\n  if ('Notification' in window) {\n    if (Notification.permission === 'granted') {\n        navigator.serviceWorker.getRegistration().then(reg => {\n          const options = {\n            body: msgBody,\n            tag: 'id1',\n            icon: 'static/img/apple-touch-icon-120x120.png',\n            vibrate: [100, 50, 100],\n            data: {\n              dateOfArrival: Date.now(),\n              primaryKey: 1,\n              sender: sender,\n            },\n            actions: [\n              {action: 'explore', title: 'Go to the site',\n                icon: 'static/img/apple-touch-icon-120x120.png'\n              },\n              {action: 'close', title: 'Close the notification',\n                icon: 'static/img/apple-touch-icon-120x120.png'\n              },\n            ]\n          };\n          reg.showNotification(`New message from ${sender}`, options)\n\n          }).catch(err => console.error(err));\n    }\n  }\n};\n\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"dayjs\");","module.exports = require(\"next/link\");","module.exports = require(\"react\");","module.exports = require(\"react-drag-drop-container\");","module.exports = require(\"react-redux\");","module.exports = require(\"socket.io-client\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAFA;AAJA;AADA;AAFA;AACA;AA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AChDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAOA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AAHA;AAWA;AAAA;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAkEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAMA;AACA;AACA;AA3FA;AA6FA;AACA;AACA;AACA;AAhGA;AAkGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAlHA;AAoHA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAlIA;AAAA;AAAA;AAAA;AAAA;AAmIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApIA;AAuJA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA9JA;AAgKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AAMA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AACA;AA1LA;AA4LA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAhMA;AAkMA;AACA;AACA;AACA;AAIA;AACA;AARA;AACA;AASA;AACA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAFA;AAWA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AA4JA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AASA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAUA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AAHA;AAOA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAsGA;;;;AA9XA;AACA;AAgYA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;;AC7YA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAsFA;AACA;AACA;;;;;;;;;;;;ACtHA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AADA;AAGA;AAAA;AACA;AADA;AAdA;AAmBA;AAEA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACvCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}