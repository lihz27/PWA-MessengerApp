{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.5654bbcdf0164a863be2.hot-update.js","sources":["webpack:///./components/Messenger.js"],"sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client';\r\n\r\nimport { addMessage } from '../actions/message'\r\nimport Message from './Message'\r\n\r\nconst generateName = () => {\r\n  const getRandomInt = (min, max) => Math.floor(Math.random() * (max - min)) + min;\r\n\tconst firstName = [\"Jack\", \"Steven\", \"Brian\", \"Marc\", \"Drew\", \"Stephanie\", \"Daniel\", \"James\"];\r\n\tconst lastName = ['Li', \"Chung\", \"Tiosejo\", \"Louie\", \"Curtis\", \"Sockwell\", \"Jiang\"];\r\n\tconst name = firstName[getRandomInt(0, firstName.length)] + ' ' + lastName[getRandomInt(0, lastName.length)]\r\n\treturn name;\r\n}\r\n\r\nclass Messenger extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n    this.state = {\r\n      text: '',\r\n      messages: [],\r\n      username: generateName(),\r\n\t\t\tupdated: false,\r\n    }\r\n  }\r\n\r\n\r\n\t//TODO need to load props from redux\r\n\t// componentDidUpdate() {\r\n //    const objDiv = document.getElementByClassName('mdl-card mdl-shadow--2dp');\r\n //    objDiv.scrollTop = objDiv.scrollHeight;\r\n\t// }\r\n\r\n\r\n\r\n\tcomponentDidUpdate() {\r\n    const objDiv = document.getElementById('chatview');\r\n    objDiv.scrollTop = objDiv.scrollHeight;\r\n    this.scrollToBottom();\r\n\t\tif (!this.state.messages.length && !this.state.updated) {\r\n      this.setState({ messages: this.props.messages , updated: true});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.socket = io('http://localhost:3000');\r\n\t\tthis.socket.on('message', this.handleMessage);\r\n\t\tthis.scrollToBottom();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.socket.off('message', this.handleMessage);\r\n\t\tthis.socket.close();\r\n\t}\r\n\r\n\r\n\thandleMessage = (message) => {\r\n      this.setState(state => ({ messages: state.messages.concat(message) }));\r\n\t\t\tthis.props.addMessage(message.text, message.username, message.created_at);\r\n\t};\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst message = {\r\n\t\t\tcreated_at: (new Date()).getTime(),\r\n\t\t\tusername: this.state.username,\r\n\t\t\ttext: this.state.text,\r\n\t\t};\r\n\r\n\t\tthis.socket.emit('message', message);\r\n\r\n\t\tthis.props.addMessage(this.state.text, this.state.username, message.created_at);\r\n\t\tthis.setState(state => ({\r\n\t\t\ttext: '',\r\n\t\t\tmessages: this.state.messages.concat(message)\r\n\t\t}))\r\n\t};\r\n\r\n\tscrollToBottom = () => {\r\n\t\tthis.el.scrollIntoView({ behavior: 'smooth'});\r\n\t};\r\n\r\n\thandleChange = e => {\r\n\t\tthis.setState({username: e.target.value})\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst sameUser = (msg, i, arr) => {\r\n\t\t\treturn i > 0 && msg.username === arr[i - 1].username;\r\n\t\t};\r\n\r\n\t\tlet allMessages = this.props.messages.concat(this.state.messages);\r\n\t\tallMessages.sort((a, b) => b.createdAt - a.createdAt);\r\n\t\treturn (\r\n\t\t\t<>\r\n\r\n        <input type=\"text\" onChange={this.handleChange} placeholder={\"enter username\"}/>\r\n\r\n\t\t\t\t<div className=\"mdl-card mdl-shadow--2dp\" id=\"chatview\" >\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{/*{this.props.messages.map((message, i, array) => (*/}\r\n          {/*<Message key={i} message={message} username={this.state.username} firstMessage={sameUser(message, i, array)}/>*/}\r\n        {/*))}*/}\r\n\t\t\t\t\t{this.state.messages.map((message, i, array) => (\r\n            <Message key={i} message={message} username={this.state.username} firstMessage={sameUser(message, i, array)}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div ref={el => { this.el = el;}} />\r\n\t\t\t\t</ul>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.text}\r\n                onChange={e => this.setState({ text: e.target.value })}\r\n                className=\"mdl-textfield__input\"\r\n                id=\"input\"\r\n                placeholder={\"Send a message\"}\r\n              />\r\n              <label className=\"mdl-textfield__label\" htmlFor=\"input\">\r\n\r\n              </label>\r\n            </div>\r\n          </form>\r\n\t\t\t\t<style>{`\r\n\t\t\t\t\t\tform {\r\n\t\t\t\t\t\t\tbackground: #fff;\r\n\t\t\t\t\t\t\tpadding: 10px;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tul {\r\n\t\t\t\t\t\t\tmin-height: 100px;\r\n\t\t\t\t\t\t\tmargin: 0;\r\n\t\t\t\t\t\t\tpadding: 0;\r\n\t\t\t\t\t\t\ttext-align: left;\r\n\t\t\t\t\t\t\tlist-style: none;\r\n\t\t\t\t\t\t\tmax-height:500px;\r\n\t\t\t\t\t\t\toverflow-y: scroll;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tul li {\r\n\t\t\t\t\t\t\tpadding: 3px;\r\n\t\t\t\t\t\t\tbackground: #FFF;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t.mdl-card {\r\n\t\t\t\t\t\t\tmargin: auto;\r\n\t\t\t\t\t\t\ttransition: all .3s;\r\n\t\t\t\t\t\t\ttransform: translateY(100px);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t`}</style>\r\n\t\t\t</div>\r\n\r\n\t\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\t({ messages }) => ({ messages }),\r\n\t{ addMessage }\r\n)(Messenger)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAyCA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AA5CA;AA8CA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AA9DA;AAgEA;AAAA;AAAA;AACA;AACA;AAlEA;AAoEA;AAAA;AAAA;AACA;AACA;AApEA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AAIA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAkCA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAiCA;;;;AA1IA;AACA;AA4IA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;;;A","sourceRoot":""}