{"version":3,"file":"static/webpack/static/development/pages/index.js.79f76a406ee4169441f3.hot-update.js","sources":["webpack:///./components/Messenger.js"],"sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport io from 'socket.io-client';\n\nimport { addTodo, removeTodo } from '../actions/todo'\nimport Message from './Message'\n\n\n\nclass Messenger extends React.Component {\n\n\tstate = {\n\t\ttext: '',\n\t\tmessages: [],\n\t\tusername: Math.floor(Math.random() * 1000).toString(),\n\t}\n\n\t//TODO need to load props from redux\n\n\tcomponentDidMount() {\n\t\tthis.socket = io('http://localhost:3000');\n\t\tthis.socket.on('message', this.handleMessage);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.socket.off('message', this.handleMessage);\n\t\tthis.socket.close();\n\t}\n\n\thandleMessage = (message) => {\n\t\tthis.setState(state => ({ messages: state.messages.concat(message) }))\n\t}\n\n\thandleSubmit = e => {\n\t\te.preventDefault()\n\n\t\tconst message = {\n\t\t\tid: (new Date()).getTime(),\n\t\t\tusername: this.state.username,\n\t\t\ttext: this.state.text,\n\t\t}\n\n\t\tthis.socket.emit('message', message);\n\n\t\tthis.props.addTodo(this.state.text);\n\t\tthis.setState(state => ({\n\t\t\ttext: '',\n\t\t\tmessages: state.messages.concat(message),\n\t\t}))\n\t}\n\t\n\thandleChange = e => {\n\t\tthis.setState({username: e.target.value})\n\t}\n\n\trender() {\n\t\tconst sameUser = (msg, i, arr) => {\n\t\t\treturn i > 0 && msg.username === arr[i - 1].username;\n\t\t};\n\t\treturn (\n\t\t\t<>\n\n        <input type=\"text\" onChange={this.handleChange} placeholder={\"enter username\"}/>\n\n\t\t\t\t<div className=\"mdl-card mdl-shadow--2dp\">\n\t\t\t\t<ul>\n\t\t\t\t\t{/*{this.props.todos.map((todo, i) => (*/}\n\t\t\t\t\t\t{/*<TodoItem key={i} todo={todo} remove={this.removeTodo} />*/}\n\t\t\t\t\t{/*))}*/}\n\t\t\t\t\t<strong>{this.state.username}</strong>\n\t\t\t\t\t{this.state.messages.map((message, i, array) => (\n            <Message key={i} message={message} username={this.state.username} firstMessage={sameUser(message, i, array)}/>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\t\tonChange={e => this.setState({ text: e.target.value })}\n\t\t\t\t\t\t\tclassName=\"mdl-textfield__input\"\n\t\t\t\t\t\t\tid=\"input\"\n\t\t\t\t\t\t\tplaceholder={\"Send a message\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label className=\"mdl-textfield__label\" htmlFor=\"input\">\n\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<style>{`\n\t\t\t\t\t\tform {\n\t\t\t\t\t\t\tbackground: #fff;\n\t\t\t\t\t\t\tpadding: 10px;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tul {\n\t\t\t\t\t\t\tmin-height: 100px;\n\t\t\t\t\t\t\tmargin: 0;\n\t\t\t\t\t\t\tpadding: 0;\n\t\t\t\t\t\t\ttext-align: left;\n\t\t\t\t\t\t\tlist-style: none;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tul li {\n\t\t\t\t\t\t\tpadding: 3px;\n\t\t\t\t\t\t\tbackground: #FFF;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t.mdl-card {\n\t\t\t\t\t\t\tmargin: auto;\n\t\t\t\t\t\t\ttransition: all .3s;\n\t\t\t\t\t\t\ttransform: translateY(100px);\n\t\t\t\t\t\t}\n\t\t\t\t\t`}</style>\n\t\t\t</div>\n\t\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default connect(\n\t({ todos }) => ({ todos }),\n\t{ addTodo, removeTodo }\n)(Messenger)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAnCA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AA4BA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AA8BA;;;;AAzGA;AACA;AA2GA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}