{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.dd58dd29e3c201ecb3ec.hot-update.js","sources":["webpack:///./components/Messenger.js"],"sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport io from 'socket.io-client';\r\n\r\nimport { addMessage } from '../actions/message';\r\nimport { addHouse } from '../actions/message';\r\nimport Message from './Message';\r\n// import NavBar from './NavBar';\r\n\r\nconst generateName = () => {\r\n  const getRandomInt = (min, max) =>\r\n    Math.floor(Math.random() * (max - min)) + min;\r\n  const firstName = [\r\n    'Jack',\r\n    'Steven',\r\n    'Brian',\r\n    'Marc',\r\n    'Drew',\r\n    'Stephanie',\r\n    'Daniel',\r\n    'James',\r\n    'Spencer',\r\n    'Caitlin',\r\n    'Jackie',\r\n    'Julius',\r\n    'Patrick',\r\n  ];\r\n  const lastName = [\r\n    'Li',\r\n    'Chung',\r\n    'Tiosejo',\r\n    'Louie',\r\n    'Curtis',\r\n    'Sockwell',\r\n    'Jiang',\r\n    'Bykowsky',\r\n    'Detro',\r\n    'Chen',\r\n    'Sea',\r\n    'Doyle',\r\n  ];\r\n  const name =\r\n    firstName[getRandomInt(0, firstName.length)] +\r\n    ' ' +\r\n    lastName[getRandomInt(0, lastName.length)];\r\n  return name\r\n};\r\n\r\nclass Messenger extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      messages: [],\r\n      username: generateName(),\r\n      updated: false,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n    if (!this.state.messages.length && !this.state.updated) {\r\n      const filtered = this.props.messages(message => (message.username === 'Stephanie Jiang'));\r\n      this.setState({ messages: this.props.messages, updated: true })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.socket = io('http://localhost:3000');\r\n    this.socket.on('message', this.handleMessage);\r\n    setTimeout(this.scrollToBottom, 100)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket.off('message', this.handleMessage);\r\n    this.socket.close()\r\n  }\r\n\r\n  handleMessage = message => {\r\n    this.setState(state => ({ messages: state.messages.concat(message) }));\r\n    this.props.addMessage(message.text, message.username, message.created_at)\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const message = {\r\n      created_at: new Date().getTime(),\r\n      username: this.state.username,\r\n      text: this.state.text,\r\n    };\r\n\r\n    this.socket.emit('message', message);\r\n\r\n    this.props.addMessage(\r\n      this.state.text,\r\n      this.state.username,\r\n      message.created_at,\r\n    );\r\n    this.setState(state => ({\r\n      text: '',\r\n      messages: this.state.messages.concat(message),\r\n    }))\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.el.scrollIntoView({ behavior: 'instant' })\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ username: e.target.value })\r\n  };\r\n\r\n  render() {\r\n    const sameUser = (msg, i, arr) => {\r\n      return i > 0 && msg.username === arr[i - 1].username\r\n    };\r\n\r\n    // let allMessages = this.props.messages.concat(this.state.messages);\r\n    // allMessages.sort((a, b) => b.createdAt - a.createdAt);\r\n    return (\r\n      <React.Fragment>\r\n\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          placeholder={'enter username'}\r\n        />\r\n\r\n        <div className=\"mdl-card mdl-shadow--2dp\" id=\"chatview\">\r\n          <ul>\r\n            {/*{this.props.messages.map((message, i, array) => (*/}\r\n            {/*<Message key={i} message={message} username={this.state.username} firstMessage={sameUser(message, i, array)}/>*/}\r\n            {/*))}*/}\r\n            {this.state.messages.map((message, i, array) => (\r\n              <Message\r\n                key={i}\r\n                message={message}\r\n                username={this.state.username}\r\n                firstMessage={sameUser(message, i, array)}\r\n              />\r\n            ))}\r\n            <div\r\n              ref={el => {\r\n                this.el = el\r\n              }}\r\n            />\r\n          </ul>\r\n          <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n            <div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\r\n              <input\r\n                type=\"text\"\r\n                value={this.state.text}\r\n                onChange={e => this.setState({ text: e.target.value })}\r\n                className=\"mdl-textfield__input\"\r\n                id=\"message-input\"\r\n                placeholder={'Send a message'}\r\n              />\r\n              <label className=\"mdl-textfield__label\" htmlFor=\"message-input\" />\r\n            </div>\r\n          </form>\r\n          <style>{`\r\n\t\t\t\t\t\t#message-input {\r\n\t\t\t\t\t\tborder-bottom: lightgray solid 1px;\r\n\t\t\t\t\t\tborder-top: lightgray solid 1px;\r\n\t\t\t\t\t\theight: 20px;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tform {\r\n\t\t\t\t\t\t\tbackground: #fff;\r\n\t\t\t\t\t\t\tpadding: 0px 10px 0px 10px;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tul {\r\n\t\t\t\t\t\t\tmin-height: 100px;\r\n\t\t\t\t\t\t\tmargin: 0;\r\n\t\t\t\t\t\t\tpadding: 0;\r\n\t\t\t\t\t\t\ttext-align: left;\r\n\t\t\t\t\t\t\tlist-style: none;\r\n\t\t\t\t\t\t\toverflow-y: scroll;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tul li {\r\n\t\t\t\t\t\t\tpadding: 1px;\r\n\t\t\t\t\t\t\tbackground: #FFF;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t.mdl-card {\r\n\t\t\t\t\t\t\tmargin: auto;\r\n\t\t\t\t\t\t\ttransition: all .3s;\r\n\t\t\t\t\t\t\ttransform: translateY(100px);\r\n\t\t\t\t\t\t\tmin-height: 500px;\r\n\t\t\t\t\t\t\tmax-height: 500px;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t`}</style>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  ({ messages, houses }) => ({ messages, houses }),\r\n  { addMessage , addHouse},\r\n)(Messenger)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAeA;AAcA;AAIA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8BA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAjCA;AAmCA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AAvDA;AAyDA;AAAA;AAAA;AACA;AACA;AA3DA;AA6DA;AAAA;AAAA;AACA;AACA;AA7DA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAqCA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AADA;AAIA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AANA;AAQA;AAAA;AAAA;AAoCA;;;;AAlJA;AACA;AAoJA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}