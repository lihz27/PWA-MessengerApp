{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.f20da0f202dc66d3e5d1.hot-update.js","sources":["webpack:///./components/Messenger.js"],"sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client';\r\n\r\nimport { addTodo, removeTodo } from '../actions/todo'\r\nimport Message from './Message'\r\n\r\n\r\n\r\nclass Messenger extends React.Component {\r\n\r\n\tstate = {\r\n\t\ttext: '',\r\n\t\tmessages: [],\r\n\t\tusername: Math.floor(Math.random() * 1000).toString(),\r\n\t}\r\n\r\n\t//TODO need to load props from redux\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.socket = io('http://localhost:3000');\r\n\t\tthis.socket.on('message', this.handleMessage);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.socket.off('message', this.handleMessage);\r\n\t\tthis.socket.close();\r\n\t}\r\n\r\n\thandleMessage = (message) => {\r\n\t\tthis.setState(state => ({ messages: state.messages.concat(message) }))\r\n\t}\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst message = {\r\n\t\t\tid: (new Date()).getTime(),\r\n\t\t\tusername: this.state.username,\r\n\t\t\ttext: this.state.text,\r\n\t\t}\r\n\r\n\t\tthis.socket.emit('message', message);\r\n\r\n\t\tthis.props.addTodo(this.state.text);\r\n\t\tthis.setState(state => ({\r\n\t\t\ttext: '',\r\n\t\t\tmessages: state.messages.concat(message),\r\n\t\t}))\r\n\t}\r\n\r\n\tremoveTodo = todo => {\r\n\t\tthis.props.removeTodo(todo)\r\n\t}\r\n\r\n\thandleChange = e => {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst sameUser = (msg, i, arr) => {\r\n\t\t\treturn i > 0 && msg.username === arr[i - 1].username;\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<>\r\n\r\n        <input type=\"text\" onChange={this.handleChange} placeholder={\"enter username\"}/>\r\n\r\n\t\t\t\t<div className=\"mdl-card mdl-shadow--2dp\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{/*{this.props.todos.map((todo, i) => (*/}\r\n\t\t\t\t\t\t{/*<TodoItem key={i} todo={todo} remove={this.removeTodo} />*/}\r\n\t\t\t\t\t{/*))}*/}\r\n\t\t\t\t\t{this.state.messages.map((message, i, array) => (\r\n            <Message key={i} message={message} username={this.state.username} firstMessage={sameUser(message, i, array)}/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div className=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={this.state.text}\r\n\t\t\t\t\t\t\tonChange={e => this.setState({ text: e.target.value })}\r\n\t\t\t\t\t\t\tclassName=\"mdl-textfield__input\"\r\n\t\t\t\t\t\t\tid=\"input\"\r\n\t\t\t\t\t\t\tplaceholder={\"Send a message\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label className=\"mdl-textfield__label\" htmlFor=\"input\">\r\n\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t\t<style>{`\r\n\t\t\t\t\t\tform {\r\n\t\t\t\t\t\t\tbackground: #fff;\r\n\t\t\t\t\t\t\tpadding: 10px;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tul {\r\n\t\t\t\t\t\t\tmin-height: 100px;\r\n\t\t\t\t\t\t\tmargin: 0;\r\n\t\t\t\t\t\t\tpadding: 0;\r\n\t\t\t\t\t\t\ttext-align: left;\r\n\t\t\t\t\t\t\tlist-style: none;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tul li {\r\n\t\t\t\t\t\t\tpadding: 3px;\r\n\t\t\t\t\t\t\tbackground: #FFF;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t.mdl-card {\r\n\t\t\t\t\t\t\tmargin: auto;\r\n\t\t\t\t\t\t\ttransition: all .3s;\r\n\t\t\t\t\t\t\ttransform: translateY(100px);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t`}</style>\r\n\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\t({ todos }) => ({ todos }),\r\n\t{ addTodo, removeTodo }\r\n)(Messenger)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AAvCA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAgCA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;;;;AA5GA;AACA;AA8GA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}